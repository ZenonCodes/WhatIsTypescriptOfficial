{"ast":null,"code":"var _jsxFileName = \"/Users/vera/WebstormProjects/dictproj/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [word, setWord] = useState([]);\n  const [error, setError] = useState([]);\n\n  const img = /*#__PURE__*/_jsxDEV(\"img\", {\n    children: \" src=\\\"https://i.pinimg.com/originals/b0/32/10/b032103c74cd544dba4be86c10af02c7.gif\\\" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }, this);\n\n  useEffect(() => {\n    const form = document.getElementById('defineform');\n    document.body.addEventListener('submit', async function (event) {\n      const url = 'https://api.dictionaryapi.dev/api/v2/entries/en/';\n      const formData = new FormData(form);\n      const text = formData.get('defineword');\n      fetch(url + text).then(response => response.json()).then(res => setWord(res)) // .then(res => setWord(res))\n      .catch(err => console.log(err));\n      event.preventDefault();\n    });\n  }, []); // @ts-ignore\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-dark bg-dark mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navbar-brand\",\n          href: \"#\",\n          children: \"SAY WHAT?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navbar-toggler\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#navbarCollapse\",\n          \"aria-controls\": \"navbarCollapse\",\n          \"aria-expanded\": \"false\",\n          \"aria-label\": \"Toggle navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse navbar-collapse\",\n          id: \"navbarCollapse\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav me-auto mb-2 mb-md-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"nav-link active\",\n                \"aria-current\": \"page\",\n                href: \"#\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"nav-link\",\n                href: \"https://dictionaryapi.dev\",\n                children: \"Our API\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"d-flex\",\n            id: \"defineform\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control me-2\",\n              type: \"search\",\n              name: \"defineword\",\n              placeholder: \"What WHAT?\",\n              \"aria-label\": \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-success\",\n              type: \"submit\",\n              children: \"Define\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light p-5 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SAY WHAT?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-unstyled\",\n          children: word.length > 0 ? word.map(word => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: [word.word, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: [\"Pronunciation: \", word.phonetic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Definition: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 34\n              }, this), \" \", word.meanings[0].definitions[0].definition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Synonyms: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 34\n              }, this), \" \", word.meanings[0].synonyms]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Antonyms: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 34\n              }, this), \" \", word.meanings[0].antonyms]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), word.meanings.map(meanings => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: [meanings.partOfSpeech, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"  \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Antonyms:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 43\n                }, this), \" \", meanings.antonyms + \" \", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Synonyms:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this), \" \", meanings.synonyms + \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), meanings.definitions.map(definitions => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Definition: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 42\n                  }, this), definitions.definition]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 38\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: definitions.example ? \"Example: \" + definitions.example : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 38\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)) : {\n            img\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8+nsgiV/hHnSHvejFVLRKbq+m/E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vera/WebstormProjects/dictproj/my-app/src/App.tsx"],"names":["React","useState","useEffect","App","word","setWord","error","setError","img","form","document","getElementById","body","addEventListener","event","url","formData","FormData","text","get","fetch","then","response","json","res","catch","err","console","log","preventDefault","length","map","phonetic","meanings","definitions","definition","synonyms","antonyms","partOfSpeech","example"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Word from './components/Word';\nimport {WordType} from \"./types/word.types\";\n\nfunction App() {\n\n\n    const [word, setWord] = useState([])\n    const [error,setError] = useState([])\n    const img = <img> src=\"https://i.pinimg.com/originals/b0/32/10/b032103c74cd544dba4be86c10af02c7.gif\" </img>\n\n    useEffect(() =>{\n        const form = document.getElementById('defineform') as HTMLFormElement;\n        document.body.addEventListener('submit', async function(event){\n            const url = ('https://api.dictionaryapi.dev/api/v2/entries/en/');\n            const formData = new FormData(form);\n            const text = formData.get('defineword') as string;\n             fetch(url + text)\n                 .then(response => response.json())\n                 .then(res => setWord(res))\n                // .then(res => setWord(res))\n                 .catch(err => console.log(err))\n            event.preventDefault();\n        });\n\n    }, [])\n\n  // @ts-ignore\n    return (\n    <div className=\"App\">\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">SAY WHAT?</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"https://dictionaryapi.dev\">Our API</a>\n                        </li>\n                    </ul>\n                    <form className=\"d-flex\" id=\"defineform\">\n                        <input className=\"form-control me-2\" type=\"search\" name=\"defineword\" placeholder=\"What WHAT?\"\n                               aria-label=\"Search\"/>\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Define</button>\n                    </form>\n                </div>\n            </div>\n        </nav>\n        <main className=\"container\">\n            <div className=\"bg-light p-5 rounded\">\n                <h1>SAY WHAT?</h1>\n                <ul className=\"list-unstyled\">\n                    {word.length > 0 ? word.map((word:any) =>\n                        <React.Fragment>\n                            <h2><u>{word.word} </u></h2>\n                            <p></p>\n                           <li> <i>Pronunciation: {word.phonetic}</i></li>\n                            <li> <i><b>Definition: </b></i> {word.meanings[0].definitions[0].definition}</li>\n                            <li> <i><b>Synonyms: </b></i> {word.meanings[0].synonyms}</li>\n                            <li> <i><b>Antonyms: </b></i> {word.meanings[0].antonyms}</li>\n                            {word.meanings.map((meanings) => (\n\n                                <li><b>{meanings.partOfSpeech} </b>\n                                    <p></p>\n                                    <li>  <b>Antonyms:</b> {meanings.antonyms + \" \"} </li>\n                                    <li><b>Synonyms:</b> {meanings.synonyms + \"\"}</li>\n                                    <p></p>\n\n                                 {meanings.definitions.map((definitions) => (\n                                     <React.Fragment>\n                                         <p></p>\n                                     <li><b>Definition: </b>{definitions.definition}</li>\n                                     <li><i><b>{definitions.example ? \"Example: \" + definitions.example :\"\"}</b></i></li>\n                                     </React.Fragment>\n                                 ))}</li>\n                            ))}\n\n\n\n\n\n                        </React.Fragment>\n                    ) : {img}}\n                </ul>\n            </div>\n        </main>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}